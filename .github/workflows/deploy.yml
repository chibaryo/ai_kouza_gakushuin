name: Deploy Slidev to GitHub Pages

on:
  push:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Clean previous build
        run: rm -rf dist || true
      
      - name: Copy image assets to slides directory
        run: |
          # 画像ファイルをslidesディレクトリにコピー
          if [ -d "image_generated" ]; then
            cp -r image_generated/ slides/ || true
          fi
          if [ -d "public" ]; then
            cp -r public/ slides/ || true
          fi
          echo "Image assets copied"
      
      - name: Build multiple slides from entries.json
        run: |
          # entries.json の存在確認
          if [ ! -f "slides/entries.json" ]; then
            echo "Error: slides/entries.json not found!"
            exit 1
          fi
          
          echo "Building slides from entries.json..."
          
          # 既存のdistディレクトリ内をクリーンアップ
          mkdir -p dist
          rm -rf dist/slides_* || true
          
          # プロジェクトルートに移動してビルド
          cd slides
          
          for file in slides_*.md; do
            if [ -f "$file" ]; then
              num=$(echo "$file" | sed 's/slides_\([0-9]*\)\.md/\1/')
              echo "Building: $file → slides_$num"
              
              # 出力ディレクトリを一度削除してからビルド
              rm -rf "../dist/slides_$num" || true
              
              # emptyOutDir オプションを削除してビルド
              npx slidev build "$file" \
                --base /${{ github.event.repository.name }}/slides_$num/ \
                --out "../dist/slides_$num"
            fi
          done
          cd ..
      
      - name: Create dynamic index page from entries.json
        run: |
          # entries.json から動的にインデックスページを作成
          node -e "
          const fs = require('fs');
          const path = require('path');
          
          try {
            const entriesPath = path.join('slides', 'entries.json');
            const entries = JSON.parse(fs.readFileSync(entriesPath, 'utf8'));
            
            console.log('Found entries:', Object.keys(entries));
            
            let html = \`<!DOCTYPE html>
            <html lang=\"ja\">
            <head>
                <meta charset=\"UTF-8\">
                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">
                <title>AI講義資料一覧</title>
                <style>
                    body { 
                        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif; 
                        max-width: 900px; 
                        margin: 0 auto; 
                        padding: 2rem 1rem; 
                        line-height: 1.6; 
                        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                        min-height: 100vh;
                    }
                    .container {
                        background: white;
                        border-radius: 16px;
                        padding: 2rem;
                        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
                    }
                    h1 {
                        text-align: center;
                        color: #333;
                        margin-bottom: 2rem;
                        font-size: 2.5rem;
                        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                        -webkit-background-clip: text;
                        -webkit-text-fill-color: transparent;
                        background-clip: text;
                    }
                    .slides-list {
                        list-style: none;
                        padding: 0;
                        display: grid;
                        gap: 1rem;
                    }
                    .slide-item {
                        background: #f8f9fa;
                        border-radius: 12px;
                        padding: 1.5rem;
                        transition: all 0.3s ease;
                        border: 2px solid transparent;
                    }
                    .slide-item:hover {
                        background: #e3f2fd;
                        border-color: #2196f3;
                        transform: translateY(-2px);
                        box-shadow: 0 5px 15px rgba(33, 150, 243, 0.2);
                    }
                    .slide-link {
                        display: block;
                        text-decoration: none;
                        color: #1976d2;
                        font-weight: 600;
                        font-size: 1.2rem;
                        margin-bottom: 0.5rem;
                    }
                    .slide-description {
                        color: #666;
                        margin: 0;
                        font-size: 0.95rem;
                    }
                    .slide-number {
                        display: inline-block;
                        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                        color: white;
                        width: 32px;
                        height: 32px;
                        border-radius: 50%;
                        text-align: center;
                        line-height: 32px;
                        margin-right: 0.5rem;
                        font-weight: bold;
                    }
                    footer {
                        text-align: center;
                        margin-top: 3rem;
                        color: #666;
                        font-size: 0.9rem;
                    }
                </style>
            </head>
            <body>
                <div class=\"container\">
                    <h1>📚 AI講義資料一覧</h1>
                    <ul class=\"slides-list\">\`;
            
            const sortedEntries = Object.entries(entries).sort(([keyA], [keyB]) => {
              const numA = parseInt(keyA.replace('slides_', ''));
              const numB = parseInt(keyB.replace('slides_', ''));
              return numA - numB;
            });
            
            for (const [key, entry] of sortedEntries) {
              const num = key.replace('slides_', '');
              html += \`
                        <li class=\"slide-item\">
                            <a href=\"slides_\${num}/\" class=\"slide-link\">
                                <span class=\"slide-number\">\${num}</span>
                                \${entry.title}
                            </a>
                            <p class=\"slide-description\">\${entry.description}</p>
                        </li>\`;
            }
            
            html += \`
                    </ul>
                    <footer>
                        <p>© 2024 AI講義資料</p>
                    </footer>
                </div>
            </body>
            </html>\`;
            
            fs.writeFileSync('dist/index.html', html);
            console.log('Dynamic index page created successfully');
            
          } catch (error) {
            console.error('Error creating index page:', error);
            process.exit(1);
          }
          "
      
      - name: Verify final build output
        run: |
          echo "Build verification:"
          ls -la dist/
          echo ""
          echo "Slides directories:"
          ls -la dist/slides_*/ || echo "No slides directories found"
          echo ""
          echo "Checking index.html:"
          ls -la dist/index.html || echo "index.html not found"
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          keep_files: false
          force_orphan: true